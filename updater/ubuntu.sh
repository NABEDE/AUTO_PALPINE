#!/bin/bash

# Source common functions
# shellcheck source=../common/script.sh
if [[ -f "$(dirname "$0")/../common/script.sh" ]]; then
    . "$(dirname "$0")/../common/script.sh"
fi

LOG_FILE="/var/log/update_ubuntu.log"

log_action() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $*" >> "$LOG_FILE"
}

check_sudo() {
    if [[ $EUID -ne 0 ]]; then
        echo -e "\e[31m‚ùå Ce script doit √™tre ex√©cut√© en tant que root ou via sudo.\e[0m"
        exit 1
    fi
}

update_system() {
    echo -e "\e[33müîÑ Mise √† jour du syst√®me en cours...\e[0m"
    log_action "D√©but de mise √† jour apt"
    apt update -y > /dev/null 2>&1
    check_success "V√©rification des mises √† jour (apt update)"
    apt upgrade -y > /dev/null 2>&1
    check_success "Mise √† jour du syst√®me (apt upgrade)"
    log_action "Fin de mise √† jour apt"
}

install_security_packages() {
    echo -e "\e[33müîê Installation des paquets de s√©curit√©...\e[0m"
    log_action "Installation des paquets de s√©curit√©"
    apt install -y fail2ban clamav clamav-daemon ufw unattended-upgrades > /dev/null 2>&1
    check_success "Installation des paquets de s√©curit√©"
}

configure_fail2ban() {
    echo -e "\e[33m‚öôÔ∏è Configuration de fail2ban...\e[0m"
    systemctl enable fail2ban > /dev/null 2>&1
    systemctl start fail2ban > /dev/null 2>&1
    check_success "Activation de fail2ban"
    log_action "Fail2ban configur√©"
}

configure_clamav() {
    echo -e "\e[33m‚öôÔ∏è Configuration de ClamAV...\e[0m"
    freshclam > /dev/null 2>&1
    check_success "Mise √† jour des signatures ClamAV (freshclam)"
    systemctl enable clamav-daemon > /dev/null 2>&1
    systemctl start clamav-daemon > /dev/null 2>&1
    check_success "Activation du d√©mon ClamAV"
    log_action "ClamAV configur√©"
}

configure_unattended_upgrades() {
    echo -e "\e[33müîß Activation des mises √† jour automatiques...\e[0m"
    dpkg-reconfigure -plow unattended-upgrades > /dev/null 2>&1
    check_success "Configuration de unattended-upgrades"
    log_action "Unattended-upgrades configur√©"
}

configure_ufw() {
    echo -e "\e[33müîí Activation du pare-feu UFW...\e[0m"
    ufw allow 22 > /dev/null 2>&1
    log_action "UFW : SSH autoris√©"
    echo "y" | ufw enable > /dev/null 2>&1
    check_success "Activation du pare-feu UFW"
    log_action "UFW activ√©"
}

update_ubuntu() {
    check_sudo
    echo -e "\e[32mUbuntu update process started.\e[0m"
    log_action "Process update_ubuntu d√©marr√©"

    if prompt_yes_no "Voulez-vous mettre √† jour le syst√®me ?"; then
        update_system

        if prompt_yes_no "Voulez-vous installer les paquets de s√©curit√© ?"; then
            install_security_packages
            configure_fail2ban
            configure_clamav
            configure_unattended_upgrades
            configure_ufw
            echo -e "\e[32m‚úÖ Installation et configuration des paquets de s√©curit√© termin√©es.\e[0m"
            log_action "Paquets de s√©curit√© install√©s et configur√©s"
        else
            echo -e "\e[33m‚ÑπÔ∏è Installation des paquets de s√©curit√© annul√©e.\e[0m"
            log_action "Installation des paquets de s√©curit√© annul√©e"
        fi
    else
        echo -e "\e[33m‚ÑπÔ∏è Mise √† jour du syst√®me annul√©e.\e[0m"
        log_action "Mise √† jour syst√®me annul√©e"
    fi
    echo -e "\e[32mUbuntu update process termin√©.\e[0m"
    log_action "Process update_ubuntu termin√©"
}